name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  source:
    name: Source Stage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
  build:
    name: Build Stage
    runs-on: ubuntu-latest
    needs: source

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Create and Activate Virtual Environment
        run: |
          python3.9 -m venv env
          source env/bin/activate

      - name: Install Dependencies
        run: |
          source env/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint pylint-django pytest pytest-django bandit pytest-cov
          
      - name: Set Environment Variables
        run: |
          echo "DJANGO_SETTINGS_MODULE=job_portal.settings" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=us-east-1" >> $GITHUB_ENV

  pylint:
    name: Static Code Analysis (Pylint)
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python3.9 -m venv env
          source env/bin/activate
          pip install -r requirements.txt
          pip install pylint pylint-django

      - name: Run Pylint
        run: |
          source env/bin/activate
          pylint --rcfile=.pylintrc users/ jobs/ --fail-under=8.0
        continue-on-error: false

  pytest:
    name: Test Stage (Pytest)
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python3.9 -m venv env
          source env/bin/activate
          pip install pytest pytest-django pytest-cov django
          pip install -r requirements.txt

      - name: Run Pytest
        run: |
          source env/bin/activate
          pytest --cov=jobs --cov=users
        continue-on-error: false

  bandit:
    name: Security Analysis (Bandit)
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python3.9 -m venv env
          source env/bin/activate
          pip install -r requirements.txt
          pip install bandit

      - name: Run Bandit Security Analysis
        run: |
          source env/bin/activate
          bandit -c .bandit.yml -r jobs/ users/
        continue-on-error: false
        
  deploy:
    name: Deploy to AWS Elastic Beanstalk
    runs-on: ubuntu-latest
    needs: [test, lint, security]  # Only deploy if all checks pass
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install EB CLI
        run: |
          pip install awsebcli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to Elastic Beanstalk
        run: |
          eb init -p python-3.11 ${{ secrets.APP_NAME }} --region ${{ secrets.AWS_REGION }}
          eb use ${{ secrets.ENV_NAME }}
          eb deploy